import { Body, Controller, Get, HttpCode, HttpStatus, Post, Res } from '@nestjs/common';
import { ApiOkResponse } from '@nestjs/swagger';
import { W2fpDto } from './w2fp.dto';
import { W2fpService } from './w2fp.service';

import { Blob } from 'buffer';

@Controller('/w2fp')
export class W2fpController {

  constructor(private w2fpSerivce: W2fpService) { }

  @Post()
  @HttpCode(HttpStatus.OK)
  @ApiOkResponse({
    description:
      'An image of a floor plan design, generated by a neural network.',
  })
  async post(@Body() body: W2fpDto, @Res() res : Response) {


    let prediction = await this.w2fpSerivce.loadPrediction(body);
    //@ts-ignore
    let components = this.w2fpSerivce.calculatePredictionComponents(prediction as Int32Array[]);
    let canvasBuffer = await this.w2fpSerivce.prepareFloorPlan(components);

    // let canvasURL = URL.createObjectURL();

    //@ts-ignore
    return canvasBuffer.pipe(res);
  }
}
